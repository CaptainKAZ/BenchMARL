# ==================================
# 1. 模型结构超参数
# ==================================
name: attention
embedding_dim: 64
num_heads: 4
num_attention_layers: 2
ffn_multiplier: 2
dropout_prob: 0.00
final_mlp_hidden_layers: [64,64]

# ==================================
# 2. 输入数据结构定义
# ==================================

# 2.1. 定义扁平向量中特征的实际排列顺序
# 模型将严格按照这个列表的顺序来解析输入向量。
# 你可以任意调整这里的顺序，只要它与环境输出的扁平向量一致。
input_feature_order:
  - agent_embed
  - spot_embed
  - basket_embed
  - time

# 2.2. 定义每个特征扮演的角色
# 'entity': 其编码会进入自注意力网络，用于学习空间关系。
# 'global': 不进入注意力网络，在最后阶段融合，提供全局上下文。
roles:
  entity:
    - agent_embed
    - spot_embed
    - basket_embed
  global:
    - time

# 2.3. 定义每个特征自身的属性
# 格式: { dim: 每个单位的特征维度, num: 单位的数量 }
definitions:
  # 4个智能体 (自身, 队友, 对手1, 对手2)，每个由4维向量(相对x,y,相对vx,vy)表示
  agent_embed:  { dim: 4, num: 4 }
  
  # 1个投篮点，由3维向量(相对x,y,is_in_spot)表示
  spot_embed:   { dim: 3, num: 1 }

  # 1个篮筐，由2维向量(相对x,y)表示
  basket_embed: { dim: 2, num: 1 }

  # 1个时间特征，由1维标量表示
  time:         { dim: 1, num: 1 }